/*
 * This file was automatically generated by EvoSuite
 * Mon May 13 14:15:39 GMT 2019
 */

package com.yoha.server.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.yoha.server.controller.FileController;
import com.yoha.server.mapper.FileMapper;
import com.yoha.server.service.FileService;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpServletResponseWrapper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.springframework.web.multipart.MultipartFile;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FileController_ESTest extends FileController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FileMapper fileMapper0 = mock(FileMapper.class, new ViolatedAssumptionAnswer());
      FileService fileService0 = new FileService(fileMapper0);
      FileController fileController0 = new FileController(fileService0);
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      JSONObject jSONObject0 = (JSONObject)fileController0.download("@type", httpServletResponseWrapper0);
      assertEquals(1, jSONObject0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FileMapper fileMapper0 = mock(FileMapper.class, new ViolatedAssumptionAnswer());
      FileService fileService0 = new FileService(fileMapper0);
      FileController fileController0 = new FileController(fileService0);
      // Undeclared exception!
      try { 
        fileController0.upload((MultipartFile) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.auth0.jwt.TokenUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FileMapper fileMapper0 = mock(FileMapper.class, new ViolatedAssumptionAnswer());
      FileService fileService0 = new FileService(fileMapper0);
      FileController fileController0 = new FileController(fileService0);
      // Undeclared exception!
      try { 
        fileController0.getFiles((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.auth0.jwt.TokenUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FileMapper fileMapper0 = mock(FileMapper.class, new ViolatedAssumptionAnswer());
      FileService fileService0 = new FileService(fileMapper0);
      FileController fileController0 = new FileController(fileService0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("./images/*kzI7");
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn((ServletOutputStream) null).when(httpServletResponse0).getOutputStream();
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      // Undeclared exception!
      try { 
        fileController0.download("*kzI7", httpServletResponseWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FileController fileController0 = new FileController((FileService) null);
      JSONObject jSONObject0 = (JSONObject)fileController0.getFiles("@type");
      assertEquals(3089, JSON.DEFAULT_GENERATE_FEATURE);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FileController fileController0 = new FileController((FileService) null);
      JSONObject jSONObject0 = (JSONObject)fileController0.upload((MultipartFile) null, "Success");
      assertFalse(jSONObject0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FileController fileController0 = new FileController((FileService) null);
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      // Undeclared exception!
      try { 
        fileController0.download("", httpServletResponseWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.yoha.server.controller.FileController", e);
      }
  }
}
