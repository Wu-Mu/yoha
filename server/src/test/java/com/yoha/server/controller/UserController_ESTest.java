/*
 * This file was automatically generated by EvoSuite
 * Mon May 13 14:17:01 GMT 2019
 */

package com.yoha.server.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.yoha.server.controller.UserController;
import com.yoha.server.mapper.UserMapper;
import com.yoha.server.model.User;
import com.yoha.server.service.UserService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UserController_ESTest extends UserController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      User user0 = new User();
      UserMapper userMapper0 = mock(UserMapper.class, new ViolatedAssumptionAnswer());
      doReturn(user0).when(userMapper0).getUser(any(com.yoha.server.model.User.class));
      UserService userService0 = new UserService(userMapper0);
      UserController userController0 = new UserController(userService0);
      User user1 = new User();
      // Undeclared exception!
      try { 
        userController0.login(user1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.yoha.server.service.UserService", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UserMapper userMapper0 = mock(UserMapper.class, new ViolatedAssumptionAnswer());
      doReturn((User) null, (User) null).when(userMapper0).getUser(any(com.yoha.server.model.User.class));
      UserService userService0 = new UserService(userMapper0);
      UserController userController0 = new UserController(userService0);
      User user0 = new User();
      Integer integer0 = new Integer((-1049));
      user0.setId(integer0);
      user0.setPassword("{Z");
      JSONObject jSONObject0 = (JSONObject)userController0.add(user0);
      assertEquals(3089, JSON.DEFAULT_GENERATE_FEATURE);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UserController userController0 = new UserController((UserService) null);
      UserService userService0 = userController0.getUserService();
      assertNull(userService0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      User user0 = new User();
      UserMapper userMapper0 = mock(UserMapper.class, new ViolatedAssumptionAnswer());
      doReturn(user0).when(userMapper0).getUser(any(com.yoha.server.model.User.class));
      UserService userService0 = new UserService(userMapper0);
      UserController userController0 = new UserController(userService0);
      User user1 = (User)userController0.findById(0);
      assertNull(user1.getId());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UserController userController0 = new UserController((UserService) null);
      // Undeclared exception!
      try { 
        userController0.findById(2241);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.yoha.server.controller.UserController", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      User user0 = new User();
      UserMapper userMapper0 = mock(UserMapper.class, new ViolatedAssumptionAnswer());
      doReturn(user0).when(userMapper0).getUser(any(com.yoha.server.model.User.class));
      UserService userService0 = new UserService(userMapper0);
      UserController userController0 = new UserController(userService0);
      user0.setPassword("4`1R|a. Zt");
      JSONObject jSONObject0 = (JSONObject)userController0.login(user0);
      assertFalse(jSONObject0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UserMapper userMapper0 = mock(UserMapper.class, new ViolatedAssumptionAnswer());
      doReturn((User) null).when(userMapper0).getUser(any(com.yoha.server.model.User.class));
      UserService userService0 = new UserService(userMapper0);
      UserController userController0 = new UserController(userService0);
      User user0 = new User();
      JSONObject jSONObject0 = (JSONObject)userController0.login(user0);
      assertEquals(1, jSONObject0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      User user0 = new User();
      UserMapper userMapper0 = mock(UserMapper.class, new ViolatedAssumptionAnswer());
      doReturn(user0).when(userMapper0).getUser(any(com.yoha.server.model.User.class));
      UserService userService0 = new UserService(userMapper0);
      UserController userController0 = new UserController(userService0);
      JSONObject jSONObject0 = (JSONObject)userController0.add(user0);
      assertEquals(989, JSON.DEFAULT_PARSER_FEATURE);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UserMapper userMapper0 = mock(UserMapper.class, new ViolatedAssumptionAnswer());
      doReturn((User) null).when(userMapper0).getUser(any(com.yoha.server.model.User.class));
      UserService userService0 = new UserService(userMapper0);
      UserController userController0 = new UserController(userService0);
      User user0 = new User();
      // Undeclared exception!
      try { 
        userController0.add(user0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.yoha.server.service.UserService", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UserMapper userMapper0 = mock(UserMapper.class, new ViolatedAssumptionAnswer());
      doReturn((User) null).when(userMapper0).getUser(any(com.yoha.server.model.User.class));
      UserService userService0 = new UserService(userMapper0);
      UserController userController0 = new UserController(userService0);
      Object object0 = userController0.findById(618);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UserMapper userMapper0 = mock(UserMapper.class, new ViolatedAssumptionAnswer());
      UserService userService0 = new UserService(userMapper0);
      UserController userController0 = new UserController(userService0);
      userController0.setUserService(userService0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UserMapper userMapper0 = mock(UserMapper.class, new ViolatedAssumptionAnswer());
      UserService userService0 = new UserService(userMapper0);
      UserController userController0 = new UserController(userService0);
      UserService userService1 = userController0.getUserService();
      assertSame(userService0, userService1);
  }
}
