/*
 * This file was automatically generated by EvoSuite
 * Mon May 13 14:17:44 GMT 2019
 */

package com.yoha.server.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.yoha.server.model.File;
import java.sql.Timestamp;
import java.time.Clock;
import java.time.Instant;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class File_ESTest extends File_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      File file0 = new File();
      Clock clock0 = MockClock.systemDefaultZone();
      Instant instant0 = MockInstant.now(clock0);
      Timestamp timestamp0 = Timestamp.from(instant0);
      file0.setUploadtime(timestamp0);
      Timestamp timestamp1 = file0.getUploadtime();
      assertEquals("2014-02-14 20:21:21.32", timestamp1.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      File file0 = new File();
      Integer integer0 = new Integer(2853);
      file0.setOwnerid(integer0);
      Integer integer1 = file0.getOwnerid();
      assertEquals(2853, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      File file0 = new File();
      Integer integer0 = new Integer(0);
      file0.setOwnerid(integer0);
      Integer integer1 = file0.getOwnerid();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      File file0 = new File();
      Integer integer0 = new Integer((-130));
      file0.setOwnerid(integer0);
      Integer integer1 = file0.getOwnerid();
      assertEquals((-130), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      File file0 = new File();
      Integer integer0 = new Integer((-2641));
      file0.setOwnerid(integer0);
      Integer integer1 = file0.getOwnerid();
      assertEquals((-2641), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      File file0 = new File();
      file0.setName(";>");
      String string0 = file0.getName();
      assertEquals(";>", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      File file0 = new File();
      Integer integer0 = new Integer(127);
      file0.setId(integer0);
      Integer integer1 = file0.getId();
      assertEquals(127, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      File file0 = new File();
      Integer integer0 = new Integer((-2053));
      file0.setId(integer0);
      Integer integer1 = file0.getId();
      assertEquals((-2053), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      File file0 = new File();
      Timestamp timestamp0 = file0.getUploadtime();
      assertNull(timestamp0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      File file0 = new File();
      file0.setName("");
      String string0 = file0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      File file0 = new File();
      Timestamp timestamp0 = new Timestamp(0L);
      file0.setUploadtime(timestamp0);
      Timestamp timestamp1 = file0.getUploadtime();
      assertSame(timestamp1, timestamp0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      File file0 = new File();
      Integer integer0 = file0.getId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      File file0 = new File();
      Integer integer0 = file0.getOwnerid();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      File file0 = new File();
      String string0 = file0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      File file0 = new File();
      Integer integer0 = new Integer(0);
      file0.setId(integer0);
      Integer integer1 = file0.getId();
      assertEquals(0, (int)integer1);
  }
}
